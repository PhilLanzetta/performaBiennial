{"version":3,"file":"component---src-pages-clients-js-772fc183970e2bb17699.js","mappings":"6JA8BA,IA3BqB,IAAmB,IAAlB,SAAEA,GAAU,EAChC,MAAM,EAACC,EAAc,EAACC,IAAoBC,EAAAA,EAAAA,UAAS,IAC7C,EAACC,EAAQ,EAACC,IAAcF,EAAAA,EAAAA,WAAS,IACjC,MAAEG,IAAUC,EAAAA,EAAAA,KAEZC,EAAe,KACnB,MAAMC,EAAmBC,OAAOC,QAChCN,EAAWJ,EAAgBQ,GAAoBA,EAAmB,IAClEP,EAAiBO,EAAiB,EAYpC,OATAG,EAAAA,EAAAA,YAAU,KACR,GAAIN,EAAQ,IAEV,OADAI,OAAOG,iBAAiB,SAAUL,GAC3B,IAAME,OAAOI,oBAAoB,SAAUN,GAElDH,GAAW,EACb,GACC,CAACJ,EAAeG,EAASI,IAG1B,uBAAKO,UAAS,gBAAiBX,EAAU,GAAK,qBAC3CJ,EACG,C,iIClBV,MA4EagB,EAAO,IAAM,gBAAC,IAAG,CAACC,MAAM,YAErC,UA9EgB,IAAe,IAAd,KAAEC,GAAM,EACvB,SAASC,EAAWC,EAAOC,EAAOC,GAChC,OAAOA,EAAMC,QAAQH,KAAWC,CAClC,CAEA,MAAMG,EAAgBN,EAAKO,qBAAqBC,MAC7CC,KAAIC,GAAUA,EAAOA,SACrBC,QAAOC,GAAiB,OAATA,IACfC,QAAO,CAACC,EAAGC,IAAMD,EAAEE,OAAOD,IAAI,IAC9BJ,OAAOV,GACPgB,OAEGC,EAAkBZ,EACrBG,KAAIC,GAAUA,EAAOS,OAAO,KAC5BR,OAAOV,GAEV,OACE,gBAAC,IAAM,KACL,gBAAC,IAAY,KACX,gBAAC,EAAAmB,KAAI,CAACC,GAAG,YAAW,YAEtB,uBAAKxB,UAAU,0BACb,uBACEyB,wBAAyB,CACvBC,OACEvB,EAAKwB,4BAA4BC,QAAQC,oBAAoBC,MAEjE9B,UAAU,yBAEZ,uBAAKA,UAAU,4BACZqB,EAAgBT,KAAI,CAACmB,EAAQzB,IAC5B,uBAAK0B,IAAK1B,EAAON,UAAU,0BACzB,gBAAC,KAAI,CAACiC,aAAa,GACjB,qBAAGjC,UAAU,mBAAmB+B,IAElC,0BACGtB,EAAcG,KAAI,CAACC,EAAQP,IACtBO,EAAOS,OAAO,KAAOS,EAErB,sBAAI/B,UAAU,oBAAoBgC,IAAK1B,GACrC,gBAAC,KAAI,CAAC2B,aAAa,GACjB,gBAAC,EAAAV,KAAI,CAACC,GAAG,YAAYU,MAAO,CAAErB,OAAQA,IACnCA,KAMF,aAQd,C","sources":["webpack://gatsby-starter-default/./src/components/hideOnScroll.js","webpack://gatsby-starter-default/./src/pages/clients.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport useWindowSize from \"../utils/useWindowSize\"\n\nconst HideOnScroll = ({ children }) => {\n  const [prevScrollPos, setPrevScrollPos] = useState(0)\n  const [visible, setVisible] = useState(true)\n  const { width } = useWindowSize()\n\n  const handleScroll = () => {\n    const currentScrollPos = window.scrollY\n    setVisible(prevScrollPos > currentScrollPos || currentScrollPos < 80)\n    setPrevScrollPos(currentScrollPos)\n  }\n\n  useEffect(() => {\n    if (width > 600) {\n      window.addEventListener(\"scroll\", handleScroll)\n      return () => window.removeEventListener(\"scroll\", handleScroll)\n    } else {\n      setVisible(false)\n    }\n  }, [prevScrollPos, visible, handleScroll])\n\n  return (\n    <div className={`page-header ${visible ? \"\" : \"page-header-hide\"}`}>\n      {children}\n    </div>\n  )\n}\n\nexport default HideOnScroll\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport HideOnScroll from \"../components/hideOnScroll\"\nimport { Fade } from \"react-awesome-reveal\"\nimport Seo from \"../components/seo\"\n\nconst Clients = ({ data }) => {\n  function onlyUnique(value, index, array) {\n    return array.indexOf(value) === index\n  }\n\n  const sortedClients = data.allContentfulProject.nodes\n    .map(client => client.client)\n    .filter(item => item !== null)\n    .reduce((a, b) => a.concat(b), [])\n    .filter(onlyUnique)\n    .sort()\n\n  const alphabetHeaders = sortedClients\n    .map(client => client.charAt(0))\n    .filter(onlyUnique)\n\n  return (\n    <Layout>\n      <HideOnScroll>\n        <Link to=\"/clients\">Clients</Link>\n      </HideOnScroll>\n      <div className=\"listing-page-container\">\n        <div\n          dangerouslySetInnerHTML={{\n            __html:\n              data.contentfulClientPageHeading.heading.childMarkdownRemark.html,\n          }}\n          className=\"client-page-headline\"\n        ></div>\n        <div className=\"listing-column-container\">\n          {alphabetHeaders.map((letter, index) => (\n            <div key={index} className=\"listing-column-element\">\n              <Fade triggerOnce={true}>\n                <p className=\"listing-heading\">{letter}</p>\n              </Fade>\n              <ul>\n                {sortedClients.map((client, index) => {\n                  if (client.charAt(0) === letter) {\n                    return (\n                      <li className=\"listing-list-item\" key={index}>\n                        <Fade triggerOnce={true}>\n                          <Link to=\"/projects\" state={{ client: client }}>\n                            {client}\n                          </Link>\n                        </Fade>\n                      </li>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n              </ul>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allContentfulProject {\n      nodes {\n        client\n      }\n    }\n    contentfulClientPageHeading {\n      heading {\n        childMarkdownRemark {\n          html\n        }\n      }\n    }\n  }\n`\nexport const Head = () => <Seo title=\"Clients\" />\n\nexport default Clients\n"],"names":["children","prevScrollPos","setPrevScrollPos","useState","visible","setVisible","width","useWindowSize","handleScroll","currentScrollPos","window","scrollY","useEffect","addEventListener","removeEventListener","className","Head","title","data","onlyUnique","value","index","array","indexOf","sortedClients","allContentfulProject","nodes","map","client","filter","item","reduce","a","b","concat","sort","alphabetHeaders","charAt","Link","to","dangerouslySetInnerHTML","__html","contentfulClientPageHeading","heading","childMarkdownRemark","html","letter","key","triggerOnce","state"],"sourceRoot":""}