{"version":3,"file":"component---src-pages-awards-js-4e68fff534fb6c1fb3c1.js","mappings":"6JA8BA,IA3BqB,IAAmB,IAAlB,SAAEA,GAAU,EAChC,MAAM,EAACC,EAAc,EAACC,IAAoBC,EAAAA,EAAAA,UAAS,IAC7C,EAACC,EAAQ,EAACC,IAAcF,EAAAA,EAAAA,WAAS,IACjC,MAAEG,IAAUC,EAAAA,EAAAA,KAEZC,EAAe,KACnB,MAAMC,EAAmBC,OAAOC,QAChCN,EAAWJ,EAAgBQ,GAAoBA,EAAmB,IAClEP,EAAiBO,EAAiB,EAYpC,OATAG,EAAAA,EAAAA,YAAU,KACR,GAAIN,EAAQ,IAEV,OADAI,OAAOG,iBAAiB,SAAUL,GAC3B,IAAME,OAAOI,oBAAoB,SAAUN,GAElDH,GAAW,EACb,GACC,CAACJ,EAAeG,EAASI,IAG1B,uBAAKO,UAAS,gBAAiBX,EAAU,GAAK,qBAC3CJ,EACG,C,iICnBV,MAyDagB,EAAO,IAAM,gBAAC,IAAG,CAACC,MAAM,WAErC,UA3De,IAAe,IAAd,KAAEC,GAAM,EAItB,MAAMC,EAASD,EAAKE,mBAAmBC,MACjCC,EAAQH,EAAOI,KAAIC,GAASA,EAAMC,OAAMC,QAJ9C,SAAoBC,EAAOC,EAAOC,GAChC,OAAOA,EAAMC,QAAQH,KAAWC,CAClC,IAIA,OACE,gBAAC,IAAM,KACL,gBAAC,IAAY,KACX,gBAAC,EAAAG,KAAI,CAACC,GAAG,UAAS,SAAY,MAAG,gBAAC,EAAAD,KAAI,CAACC,GAAG,WAAU,WAEtD,uBAAKjB,UAAU,0BACb,uBAAKA,UAAU,4BACZO,EAAMC,KAAI,CAACE,EAAMG,IAChB,uBAAKK,IAAKL,EAAOb,UAAU,0BACzB,gBAAC,KAAI,CAACmB,aAAa,GACjB,qBAAGnB,UAAU,mBAAmBU,IAElC,0BACGN,EAAOI,KAAIC,GACNA,EAAMC,OAASA,EAEf,sBAAIQ,IAAKT,EAAMW,GAAIpB,UAAU,qBAC3B,gBAAC,KAAI,CAACmB,aAAa,GACjB,qBAAGnB,UAAU,SAASS,EAAMY,WAC3BZ,EAAMa,SACL,yBAAIb,EAAMa,QAAQ,GAAGC,eAKjB,aAOnB,C","sources":["webpack://gatsby-starter-default/./src/components/hideOnScroll.js","webpack://gatsby-starter-default/./src/pages/awards.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport useWindowSize from \"../utils/useWindowSize\"\n\nconst HideOnScroll = ({ children }) => {\n  const [prevScrollPos, setPrevScrollPos] = useState(0)\n  const [visible, setVisible] = useState(true)\n  const { width } = useWindowSize()\n\n  const handleScroll = () => {\n    const currentScrollPos = window.scrollY\n    setVisible(prevScrollPos > currentScrollPos || currentScrollPos < 80)\n    setPrevScrollPos(currentScrollPos)\n  }\n\n  useEffect(() => {\n    if (width > 600) {\n      window.addEventListener(\"scroll\", handleScroll)\n      return () => window.removeEventListener(\"scroll\", handleScroll)\n    } else {\n      setVisible(false)\n    }\n  }, [prevScrollPos, visible, handleScroll])\n\n  return (\n    <div className={`page-header ${visible ? \"\" : \"page-header-hide\"}`}>\n      {children}\n    </div>\n  )\n}\n\nexport default HideOnScroll\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport { Link, graphql } from \"gatsby\"\nimport HideOnScroll from \"../components/hideOnScroll\"\nimport { Fade } from \"react-awesome-reveal\"\nimport Seo from \"../components/seo\"\n\nconst Awards = ({ data }) => {\n  function onlyUnique(value, index, array) {\n    return array.indexOf(value) === index\n  }\n  const awards = data.allContentfulAward.nodes\n  const years = awards.map(award => award.year).filter(onlyUnique)\n\n  return (\n    <Layout>\n      <HideOnScroll>\n        <Link to=\"/about\">About</Link> | <Link to=\"/awards\">Awards</Link>\n      </HideOnScroll>\n      <div className=\"listing-page-container\">\n        <div className=\"listing-column-container\">\n          {years.map((year, index) => (\n            <div key={index} className=\"listing-column-element\">\n              <Fade triggerOnce={true}>\n                <p className=\"listing-heading\">{year}</p>\n              </Fade>\n              <ul>\n                {awards.map(award => {\n                  if (award.year === year) {\n                    return (\n                      <li key={award.id} className=\"listing-list-item\">\n                        <Fade triggerOnce={true}>\n                          <p className=\"upper\">{award.awardName}</p>\n                          {award.project && (\n                            <p>{award.project[0].projectName}</p>\n                          )}\n                        </Fade>\n                      </li>\n                    )\n                  } else return null\n                })}\n              </ul>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allContentfulAward(sort: { year: DESC }) {\n      nodes {\n        id\n        awardName\n        year\n        project {\n          projectName\n        }\n      }\n    }\n  }\n`\nexport const Head = () => <Seo title=\"Awards\" />\n\nexport default Awards\n"],"names":["children","prevScrollPos","setPrevScrollPos","useState","visible","setVisible","width","useWindowSize","handleScroll","currentScrollPos","window","scrollY","useEffect","addEventListener","removeEventListener","className","Head","title","data","awards","allContentfulAward","nodes","years","map","award","year","filter","value","index","array","indexOf","Link","to","key","triggerOnce","id","awardName","project","projectName"],"sourceRoot":""}