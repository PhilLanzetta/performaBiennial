{"version":3,"file":"component---src-pages-network-js-dba6d245f4bb90182c60.js","mappings":"6JA8BA,IA3BqB,IAAmB,IAAlB,SAAEA,GAAU,EAChC,MAAM,EAACC,EAAc,EAACC,IAAoBC,EAAAA,EAAAA,UAAS,IAC7C,EAACC,EAAQ,EAACC,IAAcF,EAAAA,EAAAA,WAAS,IACjC,MAAEG,IAAUC,EAAAA,EAAAA,KAEZC,EAAe,KACnB,MAAMC,EAAmBC,OAAOC,QAChCN,EAAWJ,EAAgBQ,GAAoBA,EAAmB,IAClEP,EAAiBO,EAAiB,EAYpC,OATAG,EAAAA,EAAAA,YAAU,KACR,GAAIN,EAAQ,IAEV,OADAI,OAAOG,iBAAiB,SAAUL,GAC3B,IAAME,OAAOI,oBAAoB,SAAUN,GAElDH,GAAW,EACb,GACC,CAACJ,EAAeG,EAASI,IAG1B,uBAAKO,UAAS,gBAAiBX,EAAU,GAAK,qBAC3CJ,EACG,C,iICnBV,MA0DagB,EAAO,IAAM,gBAAC,IAAG,CAACC,MAAM,YAErC,UA5DgB,IAAe,IAAd,KAAEC,GAAM,EACvB,SAASC,EAAWC,EAAOC,EAAOC,GAChC,OAAOA,EAAMC,QAAQH,KAAWC,CAClC,CAEA,MAAMG,EAAUN,EAAKO,0BAA0BC,MAC5CC,KAAIC,GAAUA,EAAOC,OACrBC,OAAOX,GAEJY,EAAkBP,EAAQG,KAAIK,GAAQA,EAAKC,OAAO,KAAIH,OAAOX,GAEnE,OACE,gBAAC,IAAM,KACL,gBAAC,IAAY,KACX,gBAAC,EAAAe,KAAI,CAACC,GAAG,YAAW,YAEtB,uBAAKpB,UAAU,0BACb,uBAAKA,UAAU,4BACZgB,EAAgBJ,KAAI,CAACS,EAAQf,IAC5B,uBAAKgB,IAAKhB,EAAON,UAAU,0BACzB,gBAAC,KAAI,CAACuB,aAAa,GACjB,qBAAGvB,UAAU,mBAAmBqB,IAElC,0BACGZ,EAAQG,KAAI,CAACK,EAAMX,IACdW,EAAKC,OAAO,KAAOG,EAEnB,sBAAIrB,UAAU,oBAAoBsB,IAAKhB,GACrC,gBAAC,KAAI,CAACiB,aAAa,GACjB,gBAAC,EAAAJ,KAAI,CAACC,GAAG,YAAYI,MAAO,CAAEC,QAASR,IACpCA,KAMF,aAQd,C","sources":["webpack://gatsby-starter-default/./src/components/hideOnScroll.js","webpack://gatsby-starter-default/./src/pages/network.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport useWindowSize from \"../utils/useWindowSize\"\n\nconst HideOnScroll = ({ children }) => {\n  const [prevScrollPos, setPrevScrollPos] = useState(0)\n  const [visible, setVisible] = useState(true)\n  const { width } = useWindowSize()\n\n  const handleScroll = () => {\n    const currentScrollPos = window.scrollY\n    setVisible(prevScrollPos > currentScrollPos || currentScrollPos < 80)\n    setPrevScrollPos(currentScrollPos)\n  }\n\n  useEffect(() => {\n    if (width > 600) {\n      window.addEventListener(\"scroll\", handleScroll)\n      return () => window.removeEventListener(\"scroll\", handleScroll)\n    } else {\n      setVisible(false)\n    }\n  }, [prevScrollPos, visible, handleScroll])\n\n  return (\n    <div className={`page-header ${visible ? \"\" : \"page-header-hide\"}`}>\n      {children}\n    </div>\n  )\n}\n\nexport default HideOnScroll\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport HideOnScroll from \"../components/hideOnScroll\"\nimport { Fade } from \"react-awesome-reveal\"\nimport Seo from \"../components/seo\"\n\nconst Network = ({ data }) => {\n  function onlyUnique(value, index, array) {\n    return array.indexOf(value) === index\n  }\n\n  const allData = data.allContentfulDesignMember.nodes\n    .map(member => member.name)\n    .filter(onlyUnique)\n\n  const alphabetHeaders = allData.map(item => item.charAt(0)).filter(onlyUnique)\n\n  return (\n    <Layout>\n      <HideOnScroll>\n        <Link to=\"/network\">Network</Link>\n      </HideOnScroll>\n      <div className=\"listing-page-container\">\n        <div className=\"listing-column-container\">\n          {alphabetHeaders.map((letter, index) => (\n            <div key={index} className=\"listing-column-element\">\n              <Fade triggerOnce={true}>\n                <p className=\"listing-heading\">{letter}</p>\n              </Fade>\n              <ul>\n                {allData.map((item, index) => {\n                  if (item.charAt(0) === letter) {\n                    return (\n                      <li className=\"listing-list-item\" key={index}>\n                        <Fade triggerOnce={true}>\n                          <Link to=\"/projects\" state={{ network: item }}>\n                            {item}\n                          </Link>\n                        </Fade>\n                      </li>\n                    )\n                  } else {\n                    return null\n                  }\n                })}\n              </ul>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allContentfulDesignMember(sort: { name: ASC }) {\n      nodes {\n        id\n        name\n      }\n    }\n  }\n`\nexport const Head = () => <Seo title=\"Network\" />\n\nexport default Network\n"],"names":["children","prevScrollPos","setPrevScrollPos","useState","visible","setVisible","width","useWindowSize","handleScroll","currentScrollPos","window","scrollY","useEffect","addEventListener","removeEventListener","className","Head","title","data","onlyUnique","value","index","array","indexOf","allData","allContentfulDesignMember","nodes","map","member","name","filter","alphabetHeaders","item","charAt","Link","to","letter","key","triggerOnce","state","network"],"sourceRoot":""}