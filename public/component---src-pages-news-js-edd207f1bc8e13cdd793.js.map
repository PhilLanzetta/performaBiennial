{"version":3,"file":"component---src-pages-news-js-edd207f1bc8e13cdd793.js","mappings":"2JA8BA,IA3BqB,IAAmB,IAAlB,SAAEA,GAAU,EAChC,MAAM,EAACC,EAAc,EAACC,IAAoBC,EAAAA,EAAAA,UAAS,IAC7C,EAACC,EAAQ,EAACC,IAAcF,EAAAA,EAAAA,WAAS,IACjC,MAAEG,IAAUC,EAAAA,EAAAA,KAEZC,EAAe,KACnB,MAAMC,EAAmBC,OAAOC,QAChCN,EAAWJ,EAAgBQ,GAAoBA,EAAmB,IAClEP,EAAiBO,EAAiB,EAYpC,OATAG,EAAAA,EAAAA,YAAU,KACR,GAAIN,EAAQ,IAEV,OADAI,OAAOG,iBAAiB,SAAUL,GAC3B,IAAME,OAAOI,oBAAoB,SAAUN,GAElDH,GAAW,EACb,GACC,CAACJ,EAAeG,EAASI,IAG1B,uBAAKO,UAAS,gBAAiBX,EAAU,GAAK,qBAC3CJ,EACG,C,+JChBV,MA2FagB,EAAO,IAAM,gBAAC,IAAG,CAACC,MAAM,SAErC,UA7Fa,IAAyB,IAAD,MAAvB,KAAEC,EAAI,SAAEC,GAAU,EAC9B,MAAMC,EAAUF,EAAKG,uBAAuBC,OACtC,EAACC,EAAU,EAACC,IAAgBrB,EAAAA,EAAAA,UAClB,QAAd,EAAAgB,EAASM,aAAK,OAAd,EAAgBC,SACZN,EAAQO,QAAOC,GAAQA,EAAKF,WAAaP,EAASM,MAAMC,WACxDN,GAEAS,EAAaH,IACjB,MAAMI,EAAeV,EAAQO,QAAOC,GAAQA,EAAKF,WAAaA,IAC9DF,EAAaM,EAAa,EAG5B,OACE,gBAAC,IAAM,KACL,gBAAC,IAAY,KACX,gBAAC,EAAAC,KAAI,CAACC,GAAG,QAAQC,QAAS,IAAMT,EAAaJ,IAAU,QAE/C,IAAI,KACV,0BAAQa,QAAS,IAAMJ,EAAW,YAAY,YAAiB,KAAG,IACpE,0BAAQI,QAAS,IAAMJ,EAAW,YAAY,YAAiB,KAAG,IAClE,0BAAQI,QAAS,IAAMJ,EAAW,UAAU,UAAe,KAAG,IAC9D,0BAAQI,QAAS,IAAMJ,EAAW,WAAW,WAE/C,uBAAKd,UAAU,aACZQ,EAAUW,KAAIN,IACb,MAAMO,EAAmC,OAAtBP,EAAKQ,aACxB,OACE,uBAAKC,IAAKT,EAAKU,GAAIvB,UAAU,aAC3B,uBAAKA,UAAU,iCACb,gBAAC,KAAI,CAACwB,aAAa,GACjB,qBAAGxB,UAAU,4BAA4Ba,EAAKF,UAC9C,gBAAC,EAAAc,EAAW,CACVC,MAAOb,EAAKc,UAAUC,gBACtBC,IAAKhB,EAAKc,UAAUG,YACpB9B,UAAU,sBAIhB,uBAAKA,UAAU,kBACb,gBAAC,KAAI,CAACwB,aAAa,GACjB,qBAAGxB,UAAU,aACV,IAAI+B,KAAKC,eAAe,QAAS,CAChCC,MAAO,OACPC,IAAK,UACLC,KAAM,YACLC,OAAO,IAAIC,KAAKxB,EAAKyB,QAE1B,sBAAItC,UAAU,iBAAiBa,EAAK0B,UACnCnB,EACC,qBACEoB,KAAM3B,EAAKQ,aACXoB,OAAO,SACPC,IAAI,aACJ1C,UAAU,aAEV,gBAAC,KAAc,MAAkB,UAGnC,gBAAC,EAAAgB,KAAI,CAACC,GAAE,SAAWJ,EAAK8B,KAAQ3C,UAAU,aACxC,gBAAC,MAAY,MAAgB,gBAKjC,KAIL,C","sources":["webpack://gatsby-starter-default/./src/components/hideOnScroll.js","webpack://gatsby-starter-default/./src/pages/news.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport useWindowSize from \"../utils/useWindowSize\"\n\nconst HideOnScroll = ({ children }) => {\n  const [prevScrollPos, setPrevScrollPos] = useState(0)\n  const [visible, setVisible] = useState(true)\n  const { width } = useWindowSize()\n\n  const handleScroll = () => {\n    const currentScrollPos = window.scrollY\n    setVisible(prevScrollPos > currentScrollPos || currentScrollPos < 80)\n    setPrevScrollPos(currentScrollPos)\n  }\n\n  useEffect(() => {\n    if (width > 600) {\n      window.addEventListener(\"scroll\", handleScroll)\n      return () => window.removeEventListener(\"scroll\", handleScroll)\n    } else {\n      setVisible(false)\n    }\n  }, [prevScrollPos, visible, handleScroll])\n\n  return (\n    <div className={`page-header ${visible ? \"\" : \"page-header-hide\"}`}>\n      {children}\n    </div>\n  )\n}\n\nexport default HideOnScroll\n","import React, { useState } from \"react\"\nimport Layout from \"../components/layout\"\nimport { Link, graphql } from \"gatsby\"\nimport HideOnScroll from \"../components/hideOnScroll\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { BsArrowRight } from \"react-icons/bs\"\nimport { HiArrowUpRight } from \"react-icons/hi2\"\nimport { Fade } from \"react-awesome-reveal\"\nimport Seo from \"../components/seo\"\n\nconst News = ({ data, location }) => {\n  const allNews = data.allContentfulNewsEntry.nodes\n  const [newsItems, setNewsItems] = useState(\n    location.state?.category\n      ? allNews.filter(item => item.category === location.state.category)\n      : allNews\n  )\n  const filterNews = category => {\n    const filteredNews = allNews.filter(item => item.category === category)\n    setNewsItems(filteredNews)\n  }\n\n  return (\n    <Layout>\n      <HideOnScroll>\n        <Link to=\"/news\" onClick={() => setNewsItems(allNews)}>\n          News\n        </Link>{\" \"}\n        | <button onClick={() => filterNews(\"Project\")}>Projects</button> |{\" \"}\n        <button onClick={() => filterNews(\"Article\")}>Articles</button> |{\" \"}\n        <button onClick={() => filterNews(\"Award\")}>Awards</button> |{\" \"}\n        <button onClick={() => filterNews(\"Person\")}>People</button>\n      </HideOnScroll>\n      <div className=\"news-page\">\n        {newsItems.map(item => {\n          const isExternal = item.externalLink !== null\n          return (\n            <div key={item.id} className=\"news-item\">\n              <div className=\"news-category-image-container\">\n                <Fade triggerOnce={true}>\n                  <p className=\"upper news-item-category\">{item.category}</p>\n                  <GatsbyImage\n                    image={item.heroImage.gatsbyImageData}\n                    alt={item.heroImage.description}\n                    className=\"news-item-image\"\n                  ></GatsbyImage>\n                </Fade>\n              </div>\n              <div className=\"news-item-text\">\n                <Fade triggerOnce={true}>\n                  <p className=\"news-date\">\n                    {new Intl.DateTimeFormat(\"en-us\", {\n                      month: \"long\",\n                      day: \"numeric\",\n                      year: \"numeric\",\n                    }).format(new Date(item.date))}\n                  </p>\n                  <h2 className=\"news-headline\">{item.headline}</h2>\n                  {isExternal ? (\n                    <a\n                      href={item.externalLink}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      className=\"home-link\"\n                    >\n                      <HiArrowUpRight></HiArrowUpRight> Visit\n                    </a>\n                  ) : (\n                    <Link to={`/news/${item.slug}`} className=\"home-link\">\n                      <BsArrowRight></BsArrowRight> Read More\n                    </Link>\n                  )}\n                </Fade>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allContentfulNewsEntry(sort: { date: DESC }) {\n      nodes {\n        slug\n        id\n        externalLink\n        category\n        headline\n        heroImage {\n          gatsbyImageData\n          description\n          id\n        }\n        date\n      }\n    }\n  }\n`\nexport const Head = () => <Seo title=\"News\" />\n\nexport default News\n"],"names":["children","prevScrollPos","setPrevScrollPos","useState","visible","setVisible","width","useWindowSize","handleScroll","currentScrollPos","window","scrollY","useEffect","addEventListener","removeEventListener","className","Head","title","data","location","allNews","allContentfulNewsEntry","nodes","newsItems","setNewsItems","state","category","filter","item","filterNews","filteredNews","Link","to","onClick","map","isExternal","externalLink","key","id","triggerOnce","G","image","heroImage","gatsbyImageData","alt","description","Intl","DateTimeFormat","month","day","year","format","Date","date","headline","href","target","rel","slug"],"sourceRoot":""}